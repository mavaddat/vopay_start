image: vopay/yapov:latest

pipelines:
  default:
    - step:
        caches:
          - node
        name: 'Build'
        script:
          - node i
          - node run build
    - parallel:
      - step:
          caches:
            - node
          name: 'Test'
          script:
            - echo "No testing yet..."
      - step:
          caches:
            - node
          name: 'Lint'
          script:
            - npm install --save-dev eslint && npm init @eslint/config
            - npm install --save-dev eslint eslint-plugin-markdown
            - echo 'module.exports = {\nextends:\ [\n\t\t"plugin:markdown/recommended",\n\t\teslint:recommended"\n\t]\n};' > .eslintrc.js
            - eslint --format checkstyle
            - pipe: atlassian/checkstyle-report:0.3.1
              variables:
                # CHECKSTYLE_RESULT_PATTERN: '<string>' # Optional.
                # CHECKSTYLE_REPORT_ID: '<string>'      # Optional.
                REPORT_FAIL_SEVERITY: 'error'       # Optional.
      - step:
          caches:
            - node
          name: 'Security scan'
          script:
            - echo "Security scanning..."
            - pipe: snyk/snyk-scan:0.5.2
              variables:
                SNYK_TOKEN: $SNYK_TOKEN
                LANGUAGE: "npm" # Required unless SNYK_TEST_JSON_INPUT is set
                # IMAGE_NAME: "<string>" # Only required if LANGUAGE set to "docker"
                CODE_INSIGHTS_RESULTS: "True" # Optional.
                # SNYK_TEST_JSON_INPUT: "<string>" # Optional. The filename or path of a JSON file containing the output from running a test with the Snyk CLI (with json output option).
                # PROTECT: "<boolean>" # Optional.
                DONT_BREAK_BUILD: "False" # Optional.
                # MONITOR: "<boolean>" # Optional.
                # SEVERITY_THRESHOLD: "<low|medium|high|critical>" # Optional.
                ORGANIZATION: "VoPay International" # Optional.
                # PROJECT_FOLDER: "<string>" # Optional.
                # TARGET_FILE: "<string>" # Optional.
                # EXTRA_ARGS: "<string>" # Optional.
                # DEBUG: "<boolean>" # Optional.

    # The following deployment steps will be executed for each pipeline run. To configure your steps and conditionally deploy see https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/
    - step:
        caches:
          - node
        name: 'Deployment to Staging'
        deployment: staging
        script:
          - echo "Uploading to AWS Amplify..."
          - pipe: atlassian/aws-cloudformation-deploy:0.13.0
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID # Optional if already defined in the context.
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY # Optional if already defined in the context.
              AWS_DEFAULT_REGION: "ca-central-1" # Optional if already defined in the context.
              # AWS_OIDC_ROLE_ARN:  # Optional by default. Required for OpenID Connect (OIDC) authentication.
              STACK_NAME: 'Docs'
              TEMPLATE: 'bitbucket-amplify.yml'
              STACK_PARAMETERS: >
                [{
                  "ParameterKey": "pAccessToken",
                  "ParameterValue": $OAUTH_TOKEN
                },
                {
                  "ParameterKey": "pRepoUrl",
                  "ParameterValue": "https://bitbucket.org/vopay/vopay-docs/"
                },
                {
                  "ParameterKey": "pBranchName",
                  "ParameterValue": "staging"
                },
                {
                  "ParameterKey": "pProjectName",
                  "ParameterValue": "VoPay Docs"
                }]
              CAPABILITIES: ['CAPABILITY_IAM', 'CAPABILITY_AUTO_EXPAND'] # Optional.
              # WAIT: '<boolean>' # Optional.
              # WAIT_INTERVAL: '<integer>' # Optional.
              # TAGS: '<json>' # Optional.
              WITH_DEFAULT_TAGS: 'True' # Optional.
              # ROLE_ARN: '<string>' # Optional.
              # EXTRA_PARAMETERS: '<string>' # Optional.
              # DEBUG: '<boolean>' # Optional.
        after-script:
          - echo "Querying AWS Amplify for the URL..."
          - export AMPLIFY_URL=$(aws cloudformation describe-stacks --stack-name Docs --query 'Stacks[0].Outputs[?OutputKey==`AmplifyUrl`].OutputValue' --output text)
          - if test -f result.svg; then rm result.svg; fi  # Remove the previous result
          - echo "Checking if AMPLIFY_URL is set and exit code was zero"
          - export SLK_MSG="Deployed to AWS Amplify (commit ${BITBUCKET_COMMIT}"
          - if [[ $BITBUCKET_EXIT_CODE -eq 0 && -z "$AMPLIFY_URL" ]]; then ln pass.svg result.svg; export SLK_MSG="$SLK_MSG url $AMPLIFY_URL)"; else ln fail.svg result.svg; export SLK_MSG="$SLK_MSG)"; fi
          - pipe: atlassian/slack-notify:2.0.0
            variables:
              WEBHOOK_URL: 'https://hooks.slack.com/services/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'
              PRETEXT: 'Docs Staging'
              MESSAGE: "$SLK_MSG"
              PAYLOAD_FILE: 'result.svg' # Optional.
              DEBUG: 'True' # Optional.
    - step:
        caches:
          - node
        name: 'Deployment to Production'
        deployment: production
        trigger: 'manual'
        script:
          - echo "No production deploy yet"
definitions:
  caches:
    bundler: vendor/bundle
